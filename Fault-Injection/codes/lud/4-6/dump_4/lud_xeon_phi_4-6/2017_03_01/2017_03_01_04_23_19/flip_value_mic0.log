2017-03-01 04:22:38:Starting flip_value script
2017-03-01 04:22:38:Initialization strings:
2017-03-01 04:22:39:(1) target extended-remote | ssh -T mic0 gdbserver --multi -
2017-03-01 04:22:39:(2) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-01 04:22:39:(3) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-01 04:22:39:(4) file /micNfs/gdb-fault-injection/injector/bin/lud/lud_check
2017-03-01 04:22:39:(5) set remote exec-file /micNfs/gdb-fault-injection/injector/bin/lud/lud_check
2017-03-01 04:22:39:(6) set args -s 2048 -n 228 -i /micNfs/gdb-fault-injection/injector/bin/lud/input_2048_th_228 -g /micNfs/gdb-fault-injection/injector/bin/lud/gold_2048_th_228
2017-03-01 04:22:39:initSignal:4
2017-03-01 04:22:39:endSignal:6
2017-03-01 04:22:39:seqSignal:30
2017-03-01 04:22:44:Backtrace BEGIN:
2017-03-01 04:22:44:#0  0x0000000000404c93 in L_lud_omp_123__par_loop2_2_5 () at lud_omp.c:148
#1  0x00007ffff790ba1f in ?? ()
#2  0x00007fffffffd9c0 in ?? ()
#3  0x00007ffff4ea0100 in ?? ()
#4  0x0000000000000001 in ?? ()
#5  0x0000000000000003 in ?? ()
#6  0x0000000000000000 in ?? ()

2017-03-01 04:22:44:143	            for (i = 0; i < BS; i++)
144	            {
145	                for (k=0; k < BS; k++) {
146	#pragma omp simd 
147	                    for (j = 0; j < BS; j++) {
148	                        sum[j] += temp_left[BS*i + k] * temp_top[BS*k + j];
149	                    }
150	                }
151	#pragma omp simd 
152	                for (j = 0; j < BS; j++) {

2017-03-01 04:22:44:Backtrace END
2017-03-01 04:22:47:Type: The type is an integer type.
2017-03-01 04:22:47:Type sizeof: 4
2017-03-01 04:22:47:Mem contents(hex):0xc00x070x000x00
2017-03-01 04:22:47:Fault Mode: One bit-flip
2017-03-01 04:22:47:base address to flip value: 0x7fffffffc698
2017-03-01 04:22:47:address max offset: 4
2017-03-01 04:22:47:Memory content before bitflip:0xc00x070x000x00
2017-03-01 04:22:47:Backtrace BEGIN:
2017-03-01 04:22:47:#0  0x00007ffff78aba64 in ?? ()
#1  0x3eaff4bb00000079 in ?? ()
#2  0x0000000000000000 in ?? ()

2017-03-01 04:22:47:153	                    BB((i+i_global),(j+j_global)) -= sum[j];
154	                    sum[j] = 0.f;
155	                }
156	            }
157	        }
158	    }
159	
160	    lud_diagonal_omp(a, size, offset);
161	#ifdef OMP_OFFLOAD
162	}

2017-03-01 04:22:47:Backtrace END
2017-03-01 04:22:51:Type: The type is a pointer.
2017-03-01 04:22:51:Type sizeof: 8
2017-03-01 04:22:51:Fliping a bit of the value pointed by a pointer
2017-03-01 04:22:51:Type: A floating point type.
2017-03-01 04:22:51:Type sizeof: 4
2017-03-01 04:22:51:Backtrace BEGIN:
2017-03-01 04:22:51:#0  0x0000000000404c93 in L_lud_omp_123__par_loop2_2_5 () at lud_omp.c:148
#1  0x00007ffff790ba1f in ?? ()
#2  0x00007fffffffd9c0 in ?? ()
#3  0x00007ffff4ea0100 in ?? ()
#4  0x0000000000000001 in ?? ()
#5  0x0000000000000003 in ?? ()
#6  0x0000000000000000 in ?? ()

2017-03-01 04:22:51:143	            for (i = 0; i < BS; i++)
144	            {
145	                for (k=0; k < BS; k++) {
146	#pragma omp simd 
147	                    for (j = 0; j < BS; j++) {
148	                        sum[j] += temp_left[BS*i + k] * temp_top[BS*k + j];
149	                    }
150	                }
151	#pragma omp simd 
152	                for (j = 0; j < BS; j++) {

2017-03-01 04:22:51:Backtrace END
2017-03-01 04:22:54:Type: The type is an integer type.
2017-03-01 04:22:54:Type sizeof: 4
2017-03-01 04:22:54:Mem contents(hex):0xc00x070x000x00
2017-03-01 04:22:54:Fault Mode: One bit-flip
2017-03-01 04:22:54:base address to flip value: 0x7fffffffc698
2017-03-01 04:22:54:address max offset: 4
2017-03-01 04:22:54:Memory content before bitflip:0xc00x070x000x00
2017-03-01 04:22:55:Backtrace BEGIN:
2017-03-01 04:22:55:#0  0x0000000000404c93 in L_lud_omp_123__par_loop2_2_5 () at lud_omp.c:148
#1  0x00007ffff790ba1f in ?? ()
#2  0x00007fffffffd9c0 in ?? ()
#3  0x00007ffff4ea0100 in ?? ()
#4  0x0000000000000001 in ?? ()
#5  0x0000000000000003 in ?? ()
#6  0x0000000000000000 in ?? ()

2017-03-01 04:22:55:143	            for (i = 0; i < BS; i++)
144	            {
145	                for (k=0; k < BS; k++) {
146	#pragma omp simd 
147	                    for (j = 0; j < BS; j++) {
148	                        sum[j] += temp_left[BS*i + k] * temp_top[BS*k + j];
149	                    }
150	                }
151	#pragma omp simd 
152	                for (j = 0; j < BS; j++) {

2017-03-01 04:22:55:Backtrace END
2017-03-01 04:23:17:Type: The type is a pointer.
2017-03-01 04:23:17:Type sizeof: 8
2017-03-01 04:23:17:Fliping a bit of the value pointed by a pointer
2017-03-01 04:23:17:Type: A floating point type.
2017-03-01 04:23:17:Type sizeof: 4
2017-03-01 04:23:17:Mem contents(hex):0x000x000x200x41
2017-03-01 04:23:17:Fault Mode: Double bit-flip
2017-03-01 04:23:17:base address to flip value: 0x7ffff5ecc010
2017-03-01 04:23:17:address max offset: 4
2017-03-01 04:23:17:Memory content before bitflip:0x000x000x200x41
2017-03-01 04:23:17:Memory content after  bitflip:0x000x000x200xc3
2017-03-01 04:23:17:Mem contents(hex):0x000x000x200xc3
2017-03-01 04:23:17:frame name: L_lud_omp_123__par_loop2_2_5
2017-03-01 04:23:17:symbol name: a
2017-03-01 04:23:17:symbol filename: lud_omp.c
2017-03-01 04:23:17:symbol line: 123
2017-03-01 04:23:17:value: 0x7ffff5ecc010
2017-03-01 04:23:17:value address: 0x7fffffffd9c0
2017-03-01 04:23:17:Type: The type is a pointer.
2017-03-01 04:23:17:Type sizeof: 8
2017-03-01 04:23:17:Fault Injection Successful after 38.4935760498s
