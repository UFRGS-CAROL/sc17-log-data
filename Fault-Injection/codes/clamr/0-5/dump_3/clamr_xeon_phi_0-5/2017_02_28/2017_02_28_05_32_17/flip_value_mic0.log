2017-02-28 05:31:07:Starting flip_value script
2017-02-28 05:31:07:Initialization strings:
2017-02-28 05:31:08:(1) target extended-remote | ssh -T mic1 gdbserver --multi -
2017-02-28 05:31:08:(2) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-02-28 05:31:08:(3) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-02-28 05:31:08:(4) file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-02-28 05:31:08:(5) set remote exec-file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-02-28 05:31:08:(6) cd /micNfs/gdb-fault-injection/injector/bin/clamr
2017-02-28 05:31:08:(7) set args -n 512 -t 100 -g 100 -G data -j md5file
2017-02-28 05:31:08:initSignal:0
2017-02-28 05:31:08:endSignal:5
2017-02-28 05:31:08:seqSignal:20
2017-02-28 05:31:12:Backtrace BEGIN:
2017-02-28 05:31:12:#0  0x0000000000542797 in Bounds_AddBounds (b=0x191ce60, add=0x11d5320) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/Bounds.c:81
#1  0x000000000053d096 in KDTree_CreateTree (t=0x7f9d50) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:255
#2  0x000000000053d3f4 in KDTree_QueryCircleIntersect_Double (t=0x7f9d50, result_num=0x7fffffffe5dc, result_indicies=0x181ae10, circ_radius=24, ncells=264192, x=0x7fff0c0d6010, dx=0x7ffecc1ce010, y=0x7ffe8c1cc010, dy=0x7ffe4c1bf010) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:329
#3  0x00000000005080fe in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1535
#4  0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-02-28 05:31:12:76	void Bounds_AddBounds(TBounds* b, TBounds* add) {
77	   assert(b && add);
78	   b->min.x = MIN(b->min.x, add->min.x);
79	   b->min.y = MIN(b->min.y, add->min.y);
80	   b->max.x = MAX(b->max.x, add->max.x);
81	   b->max.y = MAX(b->max.y, add->max.y);
82	}
83	
84	void Bounds_AddEpsilon(TBounds* b, double add) {
85	   assert(b);

2017-02-28 05:31:12:Backtrace END
2017-02-28 05:31:17:Type: The type is a pointer.
2017-02-28 05:31:17:Type sizeof: 8
2017-02-28 05:31:17:Fliping a bit of the value pointed by a pointer
2017-02-28 05:31:17:Type: The type is a structure.
2017-02-28 05:31:17:Type sizeof: 72
2017-02-28 05:31:17:Fliping value of field: extent
2017-02-28 05:31:17:Type: The type is a structure.
2017-02-28 05:31:17:Type sizeof: 32
2017-02-28 05:31:17:Fliping value of field: max
2017-02-28 05:31:17:Type: The type is a structure.
2017-02-28 05:31:17:Type sizeof: 16
2017-02-28 05:31:17:Fliping value of field: x
2017-02-28 05:31:17:Type: A floating point type.
2017-02-28 05:31:17:Type sizeof: 8
2017-02-28 05:31:17:Mem contents(hex):0x000x000x000x000x000x100x700x40
2017-02-28 05:31:17:Fault Mode: One bit-flip
2017-02-28 05:31:17:base address to flip value: 0x7f9d60
2017-02-28 05:31:17:address max offset: 8
2017-02-28 05:31:17:Memory content before bitflip:0x000x000x000x000x000x100x700x40
2017-02-28 05:31:17:Backtrace BEGIN:
2017-02-28 05:31:17:#0  0x0000000000542797 in Bounds_AddBounds (b=0x191ce60, add=0x11d5320) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/Bounds.c:81
#1  0x000000000053d096 in KDTree_CreateTree (t=0x7f9d50) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:255
#2  0x000000000053d3f4 in KDTree_QueryCircleIntersect_Double (t=0x7f9d50, result_num=0x7fffffffe5dc, result_indicies=0x181ae10, circ_radius=24, ncells=264192, x=0x7fff0c0d6010, dx=0x7ffecc1ce010, y=0x7ffe8c1cc010, dy=0x7ffe4c1bf010) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:329
#3  0x00000000005080fe in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1535
#4  0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-02-28 05:31:17:76	void Bounds_AddBounds(TBounds* b, TBounds* add) {
77	   assert(b && add);
78	   b->min.x = MIN(b->min.x, add->min.x);
79	   b->min.y = MIN(b->min.y, add->min.y);
80	   b->max.x = MAX(b->max.x, add->max.x);
81	   b->max.y = MAX(b->max.y, add->max.y);
82	}
83	
84	void Bounds_AddEpsilon(TBounds* b, double add) {
85	   assert(b);

2017-02-28 05:31:17:Backtrace END
2017-02-28 05:31:22:Type: A floating point type.
2017-02-28 05:31:22:Type sizeof: 8
2017-02-28 05:31:22:Mem contents(hex):0x100xe50xff0xff0xff0x7f0x000x00
2017-02-28 05:31:22:Fault Mode: Zero bit-flip
2017-02-28 05:31:22:base address to flip value: 0x7fffffffe4d0
2017-02-28 05:31:22:address max offset: 8
2017-02-28 05:31:22:Memory content before bitflip:0x100xe50xff0xff0xff0x7f0x000x00
2017-02-28 05:31:22:Backtrace BEGIN:
2017-02-28 05:31:22:#0  0x0000000000542797 in Bounds_AddBounds (b=0x191ce60, add=0x11d5320) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/Bounds.c:81
#1  0x000000000053d096 in KDTree_CreateTree (t=0x7f9d50) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:255
#2  0x000000000053d3f4 in KDTree_QueryCircleIntersect_Double (t=0x7f9d50, result_num=0x7fffffffe5dc, result_indicies=0x181ae10, circ_radius=24, ncells=264192, x=0x7fff0c0d6010, dx=0x7ffecc1ce010, y=0x7ffe8c1cc010, dy=0x7ffe4c1bf010) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:329
#3  0x00000000005080fe in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1535
#4  0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-02-28 05:31:22:76	void Bounds_AddBounds(TBounds* b, TBounds* add) {
77	   assert(b && add);
78	   b->min.x = MIN(b->min.x, add->min.x);
79	   b->min.y = MIN(b->min.y, add->min.y);
80	   b->max.x = MAX(b->max.x, add->max.x);
81	   b->max.y = MAX(b->max.y, add->max.y);
82	}
83	
84	void Bounds_AddEpsilon(TBounds* b, double add) {
85	   assert(b);

2017-02-28 05:31:22:Backtrace END
2017-02-28 05:31:26:Type: The type is a pointer.
2017-02-28 05:31:26:Type sizeof: 8
2017-02-28 05:31:26:Fliping a bit of the value pointed by a pointer
2017-02-28 05:31:26:Type: The type is an integer type.
2017-02-28 05:31:26:Type sizeof: 4
2017-02-28 05:31:26:Mem contents(hex):0xdb0x030x000x00
2017-02-28 05:31:26:Fault Mode: One bit-flip
2017-02-28 05:31:26:base address to flip value: 0x314ce50
2017-02-28 05:31:26:address max offset: 4
2017-02-28 05:31:26:Memory content before bitflip:0xdb0x030x000x00
2017-02-28 05:32:11:event type: exit
2017-02-28 05:32:11:exit code: 0
