2017-03-02 06:55:59:Starting flip_value script
2017-03-02 06:55:59:Initialization strings:
2017-03-02 06:55:59:(1) target extended-remote | ssh -T mic1 gdbserver --multi -
2017-03-02 06:55:59:(2) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-02 06:55:59:(3) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-02 06:55:59:(4) file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-03-02 06:55:59:(5) set remote exec-file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-03-02 06:55:59:(6) cd /micNfs/gdb-fault-injection/injector/bin/clamr
2017-03-02 06:55:59:(7) set args -n 512 -t 100 -g 100 -G data -j md5file
2017-03-02 06:55:59:initSignal:0
2017-03-02 06:55:59:endSignal:5
2017-03-02 06:55:59:seqSignal:20
2017-03-02 06:56:03:Backtrace BEGIN:
2017-03-02 06:56:03:#0  0x000000000053a19d in ui2comp (I1=<error reading variable: Cannot access memory at address 0xffffffffffffffe9>, I2=<error reading variable: Cannot access memory at address 0xfffffffffffffff1>) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/hsfc/hsfcsort.c:63
#1  0x00007ffff6b551aa in msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3238e0, n=n@entry=4) at msort.c:142
#2  0x00007ffff6b55011 in msort_with_tmp (n=4, b=<optimized out>, p=<optimized out>) at msort.c:45
#3  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3238e0, n=n@entry=8) at msort.c:53
#4  0x00007ffff6b55027 in msort_with_tmp (n=8, b=0x7ffd4c3238e0, p=<optimized out>) at msort.c:45
#5  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c323880, n=n@entry=16) at msort.c:54
#6  0x00007ffff6b55027 in msort_with_tmp (n=16, b=0x7ffd4c323880, p=<optimized out>) at msort.c:45
#7  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=32) at msort.c:54
#8  0x00007ffff6b55011 in msort_with_tmp (n=32, b=<optimized out>, p=<optimized out>) at msort.c:45
#9  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=64) at msort.c:53
#10 0x00007ffff6b55011 in msort_with_tmp (n=64, b=<optimized out>, p=<optimized out>) at msort.c:45
#11 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=129) at msort.c:53
#12 0x00007ffff6b55011 in msort_with_tmp (n=129, b=<optimized out>, p=<optimized out>) at msort.c:45
#13 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=258) at msort.c:53
#14 0x00007ffff6b55011 in msort_with_tmp (n=258, b=<optimized out>, p=<optimized out>) at msort.c:45
#15 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=516) at msort.c:53
#16 0x00007ffff6b55027 in msort_with_tmp (n=516, b=0x7ffd4c3237c0, p=<optimized out>) at msort.c:45
#17 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c321f90, n=n@entry=1032) at msort.c:54
#18 0x00007ffff6b55011 in msort_with_tmp (n=1032, b=<optimized out>, p=<optimized out>) at msort.c:45
#19 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c321f90, n=n@entry=2064) at msort.c:53
#20 0x00007ffff6b55011 in msort_with_tmp (n=2064, b=<optimized out>, p=<optimized out>) at msort.c:45
#21 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c321f90, n=n@entry=4128) at msort.c:53
#22 0x00007ffff6b55027 in msort_with_tmp (n=4128, b=0x7ffd4c321f90, p=<optimized out>) at msort.c:45
#23 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c315e10, n=n@entry=8256) at msort.c:54
#24 0x00007ffff6b55011 in msort_with_tmp (n=8256, b=<optimized out>, p=<optimized out>) at msort.c:45
#25 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c315e10, n=n@entry=16512) at msort.c:53
#26 0x00007ffff6b55027 in msort_with_tmp (n=16512, b=0x7ffd4c315e10, p=<optimized out>) at msort.c:45
#27 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c2e5810, n=n@entry=33024) at msort.c:54
#28 0x00007ffff6b55011 in msort_with_tmp (n=33024, b=<optimized out>, p=<optimized out>) at msort.c:45
#29 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c2e5810, n=n@entry=66048) at msort.c:53
#30 0x00007ffff6b55027 in msort_with_tmp (n=66048, b=0x7ffd4c2e5810, p=<optimized out>) at msort.c:45
#31 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c224010, n=n@entry=132096) at msort.c:54
#32 0x00007ffff6b55027 in msort_with_tmp (n=132096, b=0x7ffd4c224010, p=<optimized out>) at msort.c:45
#33 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c0a1010, n=n@entry=264192) at msort.c:54
#34 0x00007ffff6b55537 in msort_with_tmp (n=3170304, b=0x7ffd4c0a1010, p=0x7fffffffdf28) at msort.c:45
#35 __GI___qsort_r (b=0x7ffd4c0a1010, n=264192, s=12, cmp=<optimized out>, arg=<optimized out>) at msort.c:297
#36 0x000000000053a863 in hsfc2sort (N=264192, X=0x7ffe0c1bf010, Y=0x7ffdcc1b0010, ibase=0, Info=0x7ffd8c0ae010, LDInfo=1) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/hsfc/hsfcsort.c:161
#37 0x0000000000536b19 in Mesh::partition_cells (this=0x7f9a50, numpe=1, z_order=..., method=HILBERT_SORT) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/partition.cpp:493
#38 0x0000000000507e48 in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1516
#39 0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-03-02 06:56:03:58	    ( ((const unsigned *)I1)[0] <  ((const unsigned *)I2)[0] ) ? -1 : 1 ) : (
59	       0 ));
60	}
61	
62	static int ui2comp( const void * const I1 , const void * const I2 )
63	{
64	  return (
65	    ( ((const unsigned *)I1)[0] != ((const unsigned *)I2)[0] ) ? (
66	    ( ((const unsigned *)I1)[0] <  ((const unsigned *)I2)[0] ) ? -1 : 1 ) : (
67	    ( ((const unsigned *)I1)[1] != ((const unsigned *)I2)[1] ) ? (

2017-03-02 06:56:03:Backtrace END
2017-03-02 06:56:08:Type: The type is an integer type.
2017-03-02 06:56:08:Type sizeof: 8
2017-03-02 06:56:08:Mem contents(hex):0x020x010x000x000x000x000x000x00
2017-03-02 06:56:08:Fault Mode: One bit-flip
2017-03-02 06:56:08:base address to flip value: 0x7fffffffda48
2017-03-02 06:56:08:address max offset: 8
2017-03-02 06:56:08:Memory content before bitflip:0x020x010x000x000x000x000x000x00
2017-03-02 06:56:08:Backtrace BEGIN:
2017-03-02 06:56:09:#0  0x000000000053a19d in ui2comp (I1=<error reading variable: Cannot access memory at address 0xffffffffffffffe9>, I2=<error reading variable: Cannot access memory at address 0xfffffffffffffff1>) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/hsfc/hsfcsort.c:63
#1  0x00007ffff6b551aa in msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3238e0, n=n@entry=4) at msort.c:142
#2  0x00007ffff6b55011 in msort_with_tmp (n=4, b=<optimized out>, p=<optimized out>) at msort.c:45
#3  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3238e0, n=n@entry=8) at msort.c:53
#4  0x00007ffff6b55027 in msort_with_tmp (n=8, b=0x7ffd4c3238e0, p=<optimized out>) at msort.c:45
#5  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c323880, n=n@entry=16) at msort.c:54
#6  0x00007ffff6b55027 in msort_with_tmp (n=16, b=0x7ffd4c323880, p=<optimized out>) at msort.c:45
#7  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=32) at msort.c:54
#8  0x00007ffff6b55011 in msort_with_tmp (n=32, b=<optimized out>, p=<optimized out>) at msort.c:45
#9  msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=64) at msort.c:53
#10 0x00007ffff6b55011 in msort_with_tmp (n=64, b=<optimized out>, p=<optimized out>) at msort.c:45
#11 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=129) at msort.c:53
#12 0x00007ffff6b55011 in msort_with_tmp (n=129, b=<optimized out>, p=<optimized out>) at msort.c:45
#13 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=258) at msort.c:53
#14 0x00007ffff6b55011 in msort_with_tmp (n=258, b=<optimized out>, p=<optimized out>) at msort.c:45
#15 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c3237c0, n=n@entry=516) at msort.c:53
#16 0x00007ffff6b55027 in msort_with_tmp (n=516, b=0x7ffd4c3237c0, p=<optimized out>) at msort.c:45
#17 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c321f90, n=n@entry=1032) at msort.c:54
#18 0x00007ffff6b55011 in msort_with_tmp (n=1032, b=<optimized out>, p=<optimized out>) at msort.c:45
#19 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c321f90, n=n@entry=2064) at msort.c:53
#20 0x00007ffff6b55011 in msort_with_tmp (n=2064, b=<optimized out>, p=<optimized out>) at msort.c:45
#21 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c321f90, n=n@entry=4128) at msort.c:53
#22 0x00007ffff6b55027 in msort_with_tmp (n=4128, b=0x7ffd4c321f90, p=<optimized out>) at msort.c:45
#23 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c315e10, n=n@entry=8256) at msort.c:54
#24 0x00007ffff6b55011 in msort_with_tmp (n=8256, b=<optimized out>, p=<optimized out>) at msort.c:45
#25 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c315e10, n=n@entry=16512) at msort.c:53
#26 0x00007ffff6b55027 in msort_with_tmp (n=16512, b=0x7ffd4c315e10, p=<optimized out>) at msort.c:45
#27 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c2e5810, n=n@entry=33024) at msort.c:54
#28 0x00007ffff6b55011 in msort_with_tmp (n=33024, b=<optimized out>, p=<optimized out>) at msort.c:45
#29 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c2e5810, n=n@entry=66048) at msort.c:53
#30 0x00007ffff6b55027 in msort_with_tmp (n=66048, b=0x7ffd4c2e5810, p=<optimized out>) at msort.c:45
#31 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c224010, n=n@entry=132096) at msort.c:54
#32 0x00007ffff6b55027 in msort_with_tmp (n=132096, b=0x7ffd4c224010, p=<optimized out>) at msort.c:45
#33 msort_with_tmp (p=p@entry=0x7fffffffdf28, b=b@entry=0x7ffd4c0a1010, n=n@entry=264192) at msort.c:54
#34 0x00007ffff6b55537 in msort_with_tmp (n=3170304, b=0x7ffd4c0a1010, p=0x7fffffffdf28) at msort.c:45
#35 __GI___qsort_r (b=0x7ffd4c0a1010, n=264192, s=12, cmp=<optimized out>, arg=<optimized out>) at msort.c:297
#36 0x000000000053a863 in hsfc2sort (N=264192, X=0x7ffe0c1bf010, Y=0x7ffdcc1b0010, ibase=0, Info=0x7ffd8c0ae010, LDInfo=1) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/hsfc/hsfcsort.c:161
#37 0x0000000000536b19 in Mesh::partition_cells (this=0x7f9a50, numpe=1, z_order=..., method=HILBERT_SORT) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/partition.cpp:493
#38 0x0000000000507e48 in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1516
#39 0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-03-02 06:56:09:58	    ( ((const unsigned *)I1)[0] <  ((const unsigned *)I2)[0] ) ? -1 : 1 ) : (
59	       0 ));
60	}
61	
62	static int ui2comp( const void * const I1 , const void * const I2 )
63	{
64	  return (
65	    ( ((const unsigned *)I1)[0] != ((const unsigned *)I2)[0] ) ? (
66	    ( ((const unsigned *)I1)[0] <  ((const unsigned *)I2)[0] ) ? -1 : 1 ) : (
67	    ( ((const unsigned *)I1)[1] != ((const unsigned *)I2)[1] ) ? (

2017-03-02 06:56:09:Backtrace END
2017-03-02 06:56:14:Type: The type is an integer type.
2017-03-02 06:56:14:Type sizeof: 8
2017-03-02 06:56:14:Mem contents(hex):0x000x040x020x000x000x000x000x00
2017-03-02 06:56:14:Fault Mode: Single bit-flip
2017-03-02 06:56:14:base address to flip value: 0x7fffffffde38
2017-03-02 06:56:14:address max offset: 8
2017-03-02 06:56:14:Memory content before bitflip:0x000x040x020x000x000x000x000x00
2017-03-02 06:56:14:Memory content after  bitflip:0x000x040x020x000x000x000x100x00
2017-03-02 06:56:14:Mem contents(hex):0x000x040x020x000x000x000x100x00
2017-03-02 06:56:14:frame name: msort_with_tmp
2017-03-02 06:56:14:symbol name: n
2017-03-02 06:56:14:symbol filename: msort.c
2017-03-02 06:56:14:symbol line: 40
2017-03-02 06:56:14:value: 4503599627502592
2017-03-02 06:56:14:value address: 0x7fffffffde38
2017-03-02 06:56:14:Type: The type is an integer type.
2017-03-02 06:56:14:Type sizeof: 8
2017-03-02 06:56:14:Fault Injection Successful after 15.1904389858s
2017-03-02 06:56:14:event type: exit
2017-03-02 06:56:14:exit code: no exit code available
