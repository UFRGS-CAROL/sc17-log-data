2017-03-01 08:59:52:Starting flip_value script
2017-03-01 08:59:52:Initialization strings:
2017-03-01 08:59:53:(1) target extended-remote | ssh -T mic1 gdbserver --multi -
2017-03-01 08:59:53:(2) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-01 08:59:53:(3) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-01 08:59:53:(4) file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-03-01 08:59:53:(5) set remote exec-file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-03-01 08:59:53:(6) cd /micNfs/gdb-fault-injection/injector/bin/clamr
2017-03-01 08:59:53:(7) set args -n 512 -t 100 -g 100 -G data -j md5file
2017-03-01 08:59:53:initSignal:0
2017-03-01 08:59:53:endSignal:5
2017-03-01 08:59:53:seqSignal:20
2017-03-01 08:59:54:Backtrace BEGIN:
2017-03-01 08:59:54:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 08:59:54:171	static double H_sum_initial = 0.0;
172	static double cpu_time_graphics = 0.0;
173	static double cpu_time_calcs    = 0.0;
174	static double cpu_time_partmeas = 0.0;
175	//static double cpu_time_check    = 0.0;
176	
177	static int     ncycle  = 0;
178	static double  simTime = 0.0;
179	static double  deltaT = 0.0;
180	char total_sim_time_log[] = {"total_execution_time.log"};

2017-03-01 08:59:54:Backtrace END
2017-03-01 08:59:56:Backtrace BEGIN:
2017-03-01 08:59:56:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 08:59:56:181	struct timeval total_exec;
182	
183	int main(int argc, char **argv) {
184	
185	   cpu_timer_start(&total_exec);
186	   // Needed for code to compile correctly on the Mac
187	   int mype=0;
188	   int numpe=-1;
189	
190	   //  Process command-line arguments, if any.

2017-03-01 08:59:56:Backtrace END
2017-03-01 08:59:58:Backtrace BEGIN:
2017-03-01 08:59:58:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 08:59:58:191	   parseInput(argc, argv);
192	
193	#ifdef LOG
194	    char input_line[200] = "";
195	    int iterate_args;
196	    for(iterate_args=1; iterate_args<argc; iterate_args++)
197	        strcat(input_line, argv[iterate_args]);
198	
199	#ifdef _OPENMP
200	    //omp_set_num_threads(8);

2017-03-01 08:59:58:Backtrace END
2017-03-01 09:00:00:Backtrace BEGIN:
2017-03-01 09:00:00:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 09:00:00:201	    char temp[50] = "OMP THREADS = ";
202	    char number[10];
203	    sprintf(number, "%d ", omp_get_max_threads());
204	
205	    strcat(temp, number);
206	    if(strlen(input_line) == 200){
207	        strcat(input_line, temp);
208	        start_log_file((char *)"clamr_openmponly", input_line);
209	    }else
210	        start_log_file((char *)"clamr_openmponly", temp);

2017-03-01 09:00:00:Backtrace END
2017-03-01 09:00:02:Backtrace BEGIN:
2017-03-01 09:00:02:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 09:00:02:211	#else
212	    start_log_file((char *)"clamr_cpuonly", input_line);
213	#endif
214	
215	    set_iter_interval_print(10);
216	    printf("log file is %s\n",get_log_file_name());
217	#endif
218	
219	#ifdef _OPENMP
220	   int nt = 0;

2017-03-01 09:00:02:Backtrace END
2017-03-01 09:00:04:Backtrace BEGIN:
2017-03-01 09:00:04:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 09:00:04:221	   int tid = 0;
222	
223	   nt = omp_get_max_threads();
224	   tid = omp_get_thread_num();
225	   if (0 == tid) {
226	        printf("--- max num openmp threads: %d\n", nt);
227	   }
228	#pragma omp parallel
229	   {
230	      omp_set_num_threads(8);

2017-03-01 09:00:04:Backtrace END
2017-03-01 09:00:06:Backtrace BEGIN:
2017-03-01 09:00:06:#0  0x00007ffff7930c40 in ?? ()
#1  0x00007ffff788c60a in ?? ()
#2  0x0000000000000001 in ?? ()
#3  0x0000000000000001 in ?? ()
#4  0x0000000000000000 in ?? ()

2017-03-01 09:00:06:231	      nt = omp_get_num_threads();
232	      tid = omp_get_thread_num();
233	
234	#pragma omp master
235	      printf("--- num openmp threads in parallel region: %d\n", nt);
236	   }
237	#endif
238	
239	   parse = new PowerParser();
240	

2017-03-01 09:00:06:Backtrace END
2017-03-01 09:00:57:event type: exit
2017-03-01 09:00:57:exit code: 0
