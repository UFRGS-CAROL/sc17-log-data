2017-03-02 05:57:32:Starting flip_value script
2017-03-02 05:57:32:Initialization strings:
2017-03-02 05:57:33:(1) target extended-remote | ssh -T mic0 gdbserver --multi -
2017-03-02 05:57:33:(2) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-02 05:57:33:(3) set sysroot /opt/mpss/3.7/sysroots/k1om-mpss-linux/
2017-03-02 05:57:33:(4) file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-03-02 05:57:33:(5) set remote exec-file /micNfs/gdb-fault-injection/injector/bin/clamr/clamr_openmponly
2017-03-02 05:57:33:(6) cd /micNfs/gdb-fault-injection/injector/bin/clamr
2017-03-02 05:57:33:(7) set args -n 512 -t 100 -g 100 -G data -j md5file
2017-03-02 05:57:33:initSignal:5
2017-03-02 05:57:33:endSignal:10
2017-03-02 05:57:33:seqSignal:20
2017-03-02 05:57:38:Backtrace BEGIN:
2017-03-02 05:57:38:#0  0x000000000054266a in Bounds_AddBounds (b=0x191cf20, add=0x155b2e0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/Bounds.c:79
#1  0x000000000053d096 in KDTree_CreateTree (t=0x7f9d50) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:255
#2  0x000000000053d3f4 in KDTree_QueryCircleIntersect_Double (t=0x7f9d50, result_num=0x7fffffffe5dc, result_indicies=0x181ae10, circ_radius=24, ncells=264192, x=0x7fff0c0d6010, dx=0x7ffecc1ce010, y=0x7ffe8c1cc010, dy=0x7ffe4c1bf010) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:329
#3  0x00000000005080fe in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1535
#4  0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-03-02 05:57:38:74	}
75	
76	void Bounds_AddBounds(TBounds* b, TBounds* add) {
77	   assert(b && add);
78	   b->min.x = MIN(b->min.x, add->min.x);
79	   b->min.y = MIN(b->min.y, add->min.y);
80	   b->max.x = MAX(b->max.x, add->max.x);
81	   b->max.y = MAX(b->max.y, add->max.y);
82	}
83	

2017-03-02 05:57:38:Backtrace END
2017-03-02 05:57:43:Type: The type is an integer type.
2017-03-02 05:57:43:Type sizeof: 4
2017-03-02 05:57:43:Mem contents(hex):0x010x000x000x00
2017-03-02 05:57:43:Fault Mode: Zero bit-flip
2017-03-02 05:57:43:base address to flip value: 0x7fffffffe928
2017-03-02 05:57:43:address max offset: 4
2017-03-02 05:57:43:Memory content before bitflip:0x010x000x000x00
2017-03-02 05:57:43:Backtrace BEGIN:
2017-03-02 05:57:43:#0  0x000000000054266a in Bounds_AddBounds (b=0x191cf20, add=0x155b2e0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/Bounds.c:79
#1  0x000000000053d096 in KDTree_CreateTree (t=0x7f9d50) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:255
#2  0x000000000053d3f4 in KDTree_QueryCircleIntersect_Double (t=0x7f9d50, result_num=0x7fffffffe5dc, result_indicies=0x181ae10, circ_radius=24, ncells=264192, x=0x7fff0c0d6010, dx=0x7ffecc1ce010, y=0x7ffe8c1cc010, dy=0x7ffe4c1bf010) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:329
#3  0x00000000005080fe in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1535
#4  0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-03-02 05:57:43:74	}
75	
76	void Bounds_AddBounds(TBounds* b, TBounds* add) {
77	   assert(b && add);
78	   b->min.x = MIN(b->min.x, add->min.x);
79	   b->min.y = MIN(b->min.y, add->min.y);
80	   b->max.x = MAX(b->max.x, add->max.x);
81	   b->max.y = MAX(b->max.y, add->max.y);
82	}
83	

2017-03-02 05:57:43:Backtrace END
2017-03-02 05:57:48:Type: The type is an integer type.
2017-03-02 05:57:48:Type sizeof: 4
2017-03-02 05:57:48:Mem contents(hex):0x330xe70x030x00
2017-03-02 05:57:48:Fault Mode: One bit-flip
2017-03-02 05:57:48:base address to flip value: 0x7fffffffe388
2017-03-02 05:57:48:address max offset: 4
2017-03-02 05:57:48:Memory content before bitflip:0x330xe70x030x00
2017-03-02 05:57:48:Backtrace BEGIN:
2017-03-02 05:57:48:#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238
#1  0x00007ffff790c5ea in ?? ()
#2  0x00007ffff7fd0cd8 in ?? ()
#3  0x0000000002a10a06 in ?? ()
#4  0x0000000000000017 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)

2017-03-02 05:57:48:233	in ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S

2017-03-02 05:57:48:Backtrace END
2017-03-02 05:57:53:Type: The type is a pointer.
2017-03-02 05:57:53:Type sizeof: 8
2017-03-02 05:57:53:Fliping a bit of the pointer
2017-03-02 05:57:53:Mem contents(hex):0x600x760x7f0x000x000x000x000x00
2017-03-02 05:57:53:Fault Mode: Zero bit-flip
2017-03-02 05:57:53:base address to flip value: 0x7d0668 
2017-03-02 05:57:53:address max offset: 8
2017-03-02 05:57:53:Memory content before bitflip:0x600x760x7f0x000x000x000x000x00
2017-03-02 05:57:53:Backtrace BEGIN:
2017-03-02 05:57:53:#0  0x000000000054266a in Bounds_AddBounds (b=0x191cf20, add=0x155b2e0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/Bounds.c:79
#1  0x000000000053d096 in KDTree_CreateTree (t=0x7f9d50) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:255
#2  0x000000000053d3f4 in KDTree_QueryCircleIntersect_Double (t=0x7f9d50, result_num=0x7fffffffe5dc, result_indicies=0x181ae10, circ_radius=24, ncells=264192, x=0x7fff0c0d6010, dx=0x7ffecc1ce010, y=0x7ffe8c1cc010, dy=0x7ffe4c1bf010) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/kdtree/KDTree.c:329
#3  0x00000000005080fe in Mesh::init (this=0x7f9a50, nx=512, ny=512, circ_radius=24, initial_order=HILBERT_SORT, do_gpu_calc=0) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/mesh/mesh.cpp:1535
#4  0x000000000044516a in main (argc=11, argv=0x7fffffffec58) at /micNfs/gdb-fault-injection/injector/src/clamr/CLAMR/clamr_cpuonly.cpp:277

2017-03-02 05:57:53:74	}
75	
76	void Bounds_AddBounds(TBounds* b, TBounds* add) {
77	   assert(b && add);
78	   b->min.x = MIN(b->min.x, add->min.x);
79	   b->min.y = MIN(b->min.y, add->min.y);
80	   b->max.x = MAX(b->max.x, add->max.x);
81	   b->max.y = MAX(b->max.y, add->max.y);
82	}
83	

2017-03-02 05:57:53:Backtrace END
2017-03-02 05:57:58:Type: A floating point type.
2017-03-02 05:57:58:Type sizeof: 8
2017-03-02 05:57:58:Mem contents(hex):0x000x000x000x000x000x000xf00xbf
2017-03-02 05:57:58:Fault Mode: Zero bit-flip
2017-03-02 05:57:58:base address to flip value: 0x7d0720 
2017-03-02 05:57:58:address max offset: 8
2017-03-02 05:57:58:Memory content before bitflip:0x000x000x000x000x000x000xf00xbf
